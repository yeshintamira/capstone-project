"use strict";(self.webpackChunkcapstone_project=self.webpackChunkcapstone_project||[]).push([[961],{907:(e,s,t)=>{t.r(s),t.d(s,{Headers:()=>i,Request:()=>n,Response:()=>l,default:()=>h,fetch:()=>a});var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();const a=r.fetch,h=r.fetch.bind(r),i=r.Headers,n=r.Request,l=r.Response},961:(e,s,t)=>{t.d(s,{tE:()=>o});var r=t(907);class a extends Error{constructor(e){super(e.message),this.name="PostgrestError",this.details=e.details,this.hint=e.hint,this.code=e.code}}class h{constructor(e){this.shouldThrowOnError=!1,this.method=e.method,this.url=e.url,this.headers=e.headers,this.schema=e.schema,this.body=e.body,this.shouldThrowOnError=e.shouldThrowOnError,this.signal=e.signal,this.isMaybeSingle=e.isMaybeSingle,e.fetch?this.fetch=e.fetch:"undefined"==typeof fetch?this.fetch=r.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}then(e,s){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let t=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then((async e=>{var s,t,r;let h=null,i=null,n=null,l=e.status,c=e.statusText;if(e.ok){if("HEAD"!==this.method){const s=await e.text();""===s||(i="text/csv"===this.headers.Accept||this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?s:JSON.parse(s))}const r=null===(s=this.headers.Prefer)||void 0===s?void 0:s.match(/count=(exact|planned|estimated)/),a=null===(t=e.headers.get("content-range"))||void 0===t?void 0:t.split("/");r&&a&&a.length>1&&(n=parseInt(a[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(i)&&(i.length>1?(h={code:"PGRST116",details:`Results contain ${i.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},i=null,n=null,l=406,c="Not Acceptable"):i=1===i.length?i[0]:null)}else{const s=await e.text();try{h=JSON.parse(s),Array.isArray(h)&&404===e.status&&(i=[],h=null,l=200,c="OK")}catch(t){404===e.status&&""===s?(l=204,c="No Content"):h={message:s}}if(h&&this.isMaybeSingle&&(null===(r=null==h?void 0:h.details)||void 0===r?void 0:r.includes("0 rows"))&&(h=null,l=200,c="OK"),h&&this.shouldThrowOnError)throw new a(h)}return{error:h,data:i,count:n,status:l,statusText:c}}));return this.shouldThrowOnError||(t=t.catch((e=>{var s,t,r;return{error:{message:`${null!==(s=null==e?void 0:e.name)&&void 0!==s?s:"FetchError"}: ${null==e?void 0:e.message}`,details:`${null!==(t=null==e?void 0:e.stack)&&void 0!==t?t:""}`,hint:"",code:`${null!==(r=null==e?void 0:e.code)&&void 0!==r?r:""}`},data:null,count:null,status:0,statusText:""}}))),t.then(e,s)}}class i extends h{select(e){let s=!1;const t=(null!=e?e:"*").split("").map((e=>/\s/.test(e)&&!s?"":('"'===e&&(s=!s),e))).join("");return this.url.searchParams.set("select",t),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(e,{ascending:s=!0,nullsFirst:t,foreignTable:r,referencedTable:a=r}={}){const h=a?`${a}.order`:"order",i=this.url.searchParams.get(h);return this.url.searchParams.set(h,`${i?`${i},`:""}${e}.${s?"asc":"desc"}${void 0===t?"":t?".nullsfirst":".nullslast"}`),this}limit(e,{foreignTable:s,referencedTable:t=s}={}){const r=void 0===t?"limit":`${t}.limit`;return this.url.searchParams.set(r,`${e}`),this}range(e,s,{foreignTable:t,referencedTable:r=t}={}){const a=void 0===r?"offset":`${r}.offset`,h=void 0===r?"limit":`${r}.limit`;return this.url.searchParams.set(a,`${e}`),this.url.searchParams.set(h,""+(s-e+1)),this}abortSignal(e){return this.signal=e,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:e=!1,verbose:s=!1,settings:t=!1,buffers:r=!1,wal:a=!1,format:h="text"}={}){var i;const n=[e?"analyze":null,s?"verbose":null,t?"settings":null,r?"buffers":null,a?"wal":null].filter(Boolean).join("|"),l=null!==(i=this.headers.Accept)&&void 0!==i?i:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${h}; for="${l}"; options=${n};`,this}rollback(){var e;return(null!==(e=this.headers.Prefer)&&void 0!==e?e:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}class n extends i{eq(e,s){return this.url.searchParams.append(e,`eq.${s}`),this}neq(e,s){return this.url.searchParams.append(e,`neq.${s}`),this}gt(e,s){return this.url.searchParams.append(e,`gt.${s}`),this}gte(e,s){return this.url.searchParams.append(e,`gte.${s}`),this}lt(e,s){return this.url.searchParams.append(e,`lt.${s}`),this}lte(e,s){return this.url.searchParams.append(e,`lte.${s}`),this}like(e,s){return this.url.searchParams.append(e,`like.${s}`),this}likeAllOf(e,s){return this.url.searchParams.append(e,`like(all).{${s.join(",")}}`),this}likeAnyOf(e,s){return this.url.searchParams.append(e,`like(any).{${s.join(",")}}`),this}ilike(e,s){return this.url.searchParams.append(e,`ilike.${s}`),this}ilikeAllOf(e,s){return this.url.searchParams.append(e,`ilike(all).{${s.join(",")}}`),this}ilikeAnyOf(e,s){return this.url.searchParams.append(e,`ilike(any).{${s.join(",")}}`),this}is(e,s){return this.url.searchParams.append(e,`is.${s}`),this}in(e,s){const t=Array.from(new Set(s)).map((e=>"string"==typeof e&&new RegExp("[,()]").test(e)?`"${e}"`:`${e}`)).join(",");return this.url.searchParams.append(e,`in.(${t})`),this}contains(e,s){return"string"==typeof s?this.url.searchParams.append(e,`cs.${s}`):Array.isArray(s)?this.url.searchParams.append(e,`cs.{${s.join(",")}}`):this.url.searchParams.append(e,`cs.${JSON.stringify(s)}`),this}containedBy(e,s){return"string"==typeof s?this.url.searchParams.append(e,`cd.${s}`):Array.isArray(s)?this.url.searchParams.append(e,`cd.{${s.join(",")}}`):this.url.searchParams.append(e,`cd.${JSON.stringify(s)}`),this}rangeGt(e,s){return this.url.searchParams.append(e,`sr.${s}`),this}rangeGte(e,s){return this.url.searchParams.append(e,`nxl.${s}`),this}rangeLt(e,s){return this.url.searchParams.append(e,`sl.${s}`),this}rangeLte(e,s){return this.url.searchParams.append(e,`nxr.${s}`),this}rangeAdjacent(e,s){return this.url.searchParams.append(e,`adj.${s}`),this}overlaps(e,s){return"string"==typeof s?this.url.searchParams.append(e,`ov.${s}`):this.url.searchParams.append(e,`ov.{${s.join(",")}}`),this}textSearch(e,s,{config:t,type:r}={}){let a="";"plain"===r?a="pl":"phrase"===r?a="ph":"websearch"===r&&(a="w");const h=void 0===t?"":`(${t})`;return this.url.searchParams.append(e,`${a}fts${h}.${s}`),this}match(e){return Object.entries(e).forEach((([e,s])=>{this.url.searchParams.append(e,`eq.${s}`)})),this}not(e,s,t){return this.url.searchParams.append(e,`not.${s}.${t}`),this}or(e,{foreignTable:s,referencedTable:t=s}={}){const r=t?`${t}.or`:"or";return this.url.searchParams.append(r,`(${e})`),this}filter(e,s,t){return this.url.searchParams.append(e,`${s}.${t}`),this}}class l{constructor(e,{headers:s={},schema:t,fetch:r}){this.url=e,this.headers=s,this.schema=t,this.fetch=r}select(e,{head:s=!1,count:t}={}){const r=s?"HEAD":"GET";let a=!1;const h=(null!=e?e:"*").split("").map((e=>/\s/.test(e)&&!a?"":('"'===e&&(a=!a),e))).join("");return this.url.searchParams.set("select",h),t&&(this.headers.Prefer=`count=${t}`),new n({method:r,url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(e,{count:s,defaultToNull:t=!0}={}){const r=[];if(this.headers.Prefer&&r.push(this.headers.Prefer),s&&r.push(`count=${s}`),t||r.push("missing=default"),this.headers.Prefer=r.join(","),Array.isArray(e)){const s=e.reduce(((e,s)=>e.concat(Object.keys(s))),[]);if(s.length>0){const e=[...new Set(s)].map((e=>`"${e}"`));this.url.searchParams.set("columns",e.join(","))}}return new n({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}upsert(e,{onConflict:s,ignoreDuplicates:t=!1,count:r,defaultToNull:a=!0}={}){const h=[`resolution=${t?"ignore":"merge"}-duplicates`];if(void 0!==s&&this.url.searchParams.set("on_conflict",s),this.headers.Prefer&&h.push(this.headers.Prefer),r&&h.push(`count=${r}`),a||h.push("missing=default"),this.headers.Prefer=h.join(","),Array.isArray(e)){const s=e.reduce(((e,s)=>e.concat(Object.keys(s))),[]);if(s.length>0){const e=[...new Set(s)].map((e=>`"${e}"`));this.url.searchParams.set("columns",e.join(","))}}return new n({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}update(e,{count:s}={}){const t=[];return this.headers.Prefer&&t.push(this.headers.Prefer),s&&t.push(`count=${s}`),this.headers.Prefer=t.join(","),new n({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}delete({count:e}={}){const s=[];return e&&s.push(`count=${e}`),this.headers.Prefer&&s.unshift(this.headers.Prefer),this.headers.Prefer=s.join(","),new n({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}const c={"X-Client-Info":"postgrest-js/1.15.5"};class o{constructor(e,{headers:s={},schema:t,fetch:r}={}){this.url=e,this.headers=Object.assign(Object.assign({},c),s),this.schemaName=t,this.fetch=r}from(e){const s=new URL(`${this.url}/${e}`);return new l(s,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(e){return new o(this.url,{headers:this.headers,schema:e,fetch:this.fetch})}rpc(e,s={},{head:t=!1,get:r=!1,count:a}={}){let h;const i=new URL(`${this.url}/rpc/${e}`);let l;t||r?(h=t?"HEAD":"GET",Object.entries(s).filter((([e,s])=>void 0!==s)).map((([e,s])=>[e,Array.isArray(s)?`{${s.join(",")}}`:`${s}`])).forEach((([e,s])=>{i.searchParams.append(e,s)}))):(h="POST",l=s);const c=Object.assign({},this.headers);return a&&(c.Prefer=`count=${a}`),new n({method:h,url:i,headers:c,schema:this.schemaName,body:l,fetch:this.fetch,allowEmpty:!1})}}}}]);
//# sourceMappingURL=961.bundle.js.map